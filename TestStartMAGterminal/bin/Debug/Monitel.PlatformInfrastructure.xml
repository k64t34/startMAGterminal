<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Monitel.PlatformInfrastructure</name>
    </assembly>
    <members>
        <member name="T:Monitel.PlatformInfrastructure.AggregateSynchronizationContext">
            <summary>
            Агрегатор контекстов синхронизации
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.AggregateSynchronizationContext._contexts">
            <summary>
            Контексты синхронизации
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.AggregateSynchronizationContext.AddContext(System.Threading.SynchronizationContext)">
            <summary>
            Добовляет контекст синхронизации
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.AggregateSynchronizationContext.RemoveContext(System.Threading.SynchronizationContext)">
            <summary>
            Удаляет контекст синхронизации
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.AggregateSynchronizationContext.Invoke(System.Action,System.Int32)">
            <summary>
            Выполняет метод в вызывающем потоке но после синхронизации всех контекстов
            </summary>
            <param name="action">Действие</param>
            <param name="timeout">Таймаут на синхронизацию отдельного контекста если -1 то бесконечность. в милисекундах</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.AggregateSynchronizationContext.WaitHandle(System.Threading.AutoResetEvent,System.Threading.ManualResetEvent)">
            <summary>
            Метод ожидания выполнения операции
            </summary>
            <param name="startEvent"></param>
            <param name="finishEvent"></param>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.AssemblyTools.ModelClassUsedAttribute">
            <summary>
            Атрибут, декларирующий использование класса модели
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.AssemblyTools.ModelClassUsedAttribute.#ctor(System.String,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="modelName">Имя модели</param>
            <param name="className">Имя класса</param>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.AssemblyTools.ModelClassUsedAttribute.ModelName">
            <summary>
            Имя модели
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.AssemblyTools.ModelClassUsedAttribute.ClassName">
            <summary>
            Имя класса
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.AssemblyTools.ModelPropertyUsedAttribute">
            <summary>
            Атрибут, декларирующий использование класса модели
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.AssemblyTools.ModelPropertyUsedAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="modelName">Имя модели</param>
            <param name="className">Имя класса</param>
            <param name="propertyName">Имя свойства</param>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.AssemblyTools.ModelPropertyUsedAttribute.ModelName">
            <summary>
            Имя модели
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.AssemblyTools.ModelPropertyUsedAttribute.ClassName">
            <summary>
            Имя класса
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.AssemblyTools.ModelPropertyUsedAttribute.PropertyName">
            <summary>
            Имя свойства
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CK11Domains.DomainsCache.GetFilePath(System.String)">
            <summary>
            Возвращает путь к файлу с кэшем supervisor.domains.json
            </summary>
            <param name="machineName"></param>
            <returns></returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.CommandLineParser.ArgAttribute">
            <summary>
            Атрибут для свойств 
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.CommandLineParser.ArgAttribute.Name">
            <summary>
            Название атрибута
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.CommandLineParser.ArgAttribute.Description">
            <summary>
            Описание параметра
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.CommandLineParser.ArgAttribute.Required">
            <summary>
            Является ли параметр обязательным
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.ArgAttribute.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Название атрибута</param>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.CommandLineParser.ArgStructureDescriptor">
            <summary>
            Карты аргументов
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.ArgStructureDescriptor.CreateMap(System.Type)">
            <summary>
            Создаёт карту аргументов
            </summary>
            <param name="structType">Тип структуры</param>
            <returns></returns>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.CommandLineParser.ArgStructureDescriptor.PropertyCount">
            <summary>
            Колличество обнаруженных своиств
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.CommandLineParser.ArgStructureDescriptor.Formater">
            <summary>
            Форматер для чтения параметров
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.ArgStructureDescriptor.GetPropertyInfo(System.String)">
            <summary>
            Возвращает информацию о свойстве
            </summary>
            <param name="name">Название свойства</param>
            <returns></returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.CommandLineParser.CmdParser">
            <summary>
            Парсер разбирает командную строку
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.CmdParser.Parse``1(System.String[])">
            <summary>
            Разбирает переданную строку
            </summary>
            <typeparam name="T">Тип выходной структуры</typeparam>
            <param name="commandLine">Командная строка</param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.CmdParser.StringTypeConverter(System.String,System.Type)">
            <summary>
            В зависимости от типа изменяет входную строку
            </summary>
            <param name="inputString">Входная сторка</param>
            <param name="type">Целевой тип</param>
            <returns>Выходное значение</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.CommandLineParser.CommandLineParserException">
            <summary>
            Исключение возникающие при ошибке разбора командной строки
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.CommandLineParser.IFormater">
            <summary>
            Интерефейс 
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.IFormater.GetValue(System.String)">
            <summary>
            Возвращает значение
            </summary>
            <param name="argString">Командная строка</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.IFormater.GetName(System.String)">
            <summary>
            Возвращает название
            </summary>
            <param name="argString">Командная строка</param>
            <returns>Название параметра</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.IFormater.IsValid(System.String)">
            <summary>
            Проверяет валиден ли параметр для данного форматера
            </summary>
            <param name="argString">Cтрока</param>
            <returns></returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.CommandLineParser.WindowsFormater">
            <summary>
            Форматер для windows параметрах
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.WindowsFormater.GetValue(System.String)">
            <summary>
            Возвращает значение
            </summary>
            <param name="argString">Командная строка</param>
            <returns>Значение параметра</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.WindowsFormater.GetName(System.String)">
            <summary>
            Возвращает название
            </summary>
            <param name="argString">Командная строка</param>
            <returns>Название параметра</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.CommandLineParser.WindowsFormater.IsValid(System.String)">
            <summary>
            Проверяет валиден ли параметр для данного форматера
            </summary>
            <param name="argString">Cтрока</param>
            <returns></returns>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.CommonUids.BaseObjectRoot">
            <summary>
            Идентификатор объекта BaseObjectRoot
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.#ctor(System.String,Monitel.PlatformInfrastructure.Logger.IPlatformLogger,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="fileLocation">Папка с файлами таблиц соответствия</param>
            <param name="logger">Логгер</param>
            <param name="loadDiffConvertMappings">Загружать таблицы, требующиеся конвертеру модификаций</param>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.PlantUids">
            <summary>
            Plant - HydroPowerPlant|CogenerationPlant|CombinedCyclePlant
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.ExcitationSystemUids">
            <summary>
            SynchronousMachine - ExcitationSystem
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.OrganisationRoleUids">
            <summary>
            (Organisation, RoleCategory) - OrganisationRole
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.PESetpointUids">
            <summary>
            PEStage - (PESetpoint1, PESepoint2)
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.ProtectiveActionEquipmentUids">
            <summary>
            PEStage - ProtectiveActionEquipment
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.NeutralEndUids">
            <summary>
            TransformerNeutralEnd - (Jumper, Terminal)
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.BranchGroupReverses">
            <summary>
            BranchGroup - Reverse BranchGroup
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.BranchGroupTerminals">
            <summary>
            BranchGroup - Terminal - BranchGroupTerminal
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.BranchGroupProtectionEquipments">
            <summary>
            BranchGroup - ProtectionEquipment - BranchGroupProtectionEquipment
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.BranchGroupVisualStates">
            <summary>
            BranchGroup - Discrete (VisualState)
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.ControlAreaUids">
            <summary>
            ControlArea - Plant|Substation
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.OperationalLimitUids">
            <summary>
            OperationalLimit - (EnergyConsumer, attribute)
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.OrgRoleUids">
            <summary>
            OrgRole, (IdentifiedObject, RoleCategory, Organization[])
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.DiagramStorageUids">
            <summary>
            DiagramStorage - Diagram
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.Analogs">
            <summary>
            Analog - (PowerSystemResource, Terminal, MeasurementType, positiveFlowIn)
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.Discretes">
            <summary>
            Discrete - (PowerSystemResource, Terminal, MeasurementType)
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.ZVKDeviceTypeFilters">
            <summary>
            ZVKDeviceTypeFilter - ZVKDispObjectTypeFilter
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Converters.CIMUidMapping.BranchGroupPairs">
            <summary>
            BranchGroup - BranchGroupPair
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.Update.ConvertResult">
            <summary>
            Результат конвертирования
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Update.ConvertResult.Ok">
            <summary>
            Успешно cконвертировано
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Update.ConvertResult.NotApplicable">
            <summary>
            Конвертация не применима
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Update.ConvertResult.NotNeeded">
            <summary>
            Конвертация не требуется
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Update.PrepareResult.Ok">
            <summary>
            Успешно cконвертировано, данные не будут подвергаться 
            дополнительной обработке через вызов типизированного метода
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Update.PrepareResult.NeedTypedConvert">
            <summary>
            данные подготовлены для передачи в метод 
            типизированного конвертрирования
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Update.PrepareResult.NotNeeded">
            <summary>
            Конвертация не требуется
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.CurrentDefault">
            <summary>
            Класс для хранения некоректных значений по умолчанию
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.CurrentDefault.IncorrectInt32">
            <summary>
            Для Int32
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.CurrentDefault.IncorrectDouble">
            <summary>
            Для Double
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.None">
            <summary>
            неизвестный или неподдерживаемый тип БД
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.Full">
            <summary>
            ЭГИД
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.Main">
            <summary>
            ГИД
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.Work">
            <summary>
            Рабочая модель
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.Templates">
            <summary>
            Шаблоны
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.CaseCollection">
            <summary>
            режимные модификации
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.AppData">
            <summary>
            данные приложений
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DatabaseType.APF">
            <summary>
            Таблицы ДП
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult">
            <summary>Описание ошибки в данных, выявленной правилом валидации</summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.RuleId">
            <summary>
            Локальный идентификатор правила, формирующего сообщение
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.RuleUid">
            <summary>
            Уникальный идентификатор правила, формирующего сообщение
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.Message">
            <summary>
            Сообщение об ошибке
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.ObjectId">
            <summary>
            Локальный идентификатор объекта
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.Severity">
            <summary>
            Важность сообщения
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.#ctor(System.Int64,Monitel.PlatformInfrastructure.DataIntegrity.ValidationSeverity,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId">Локальный идентификатор объекта</param>
            <param name="severity">Важность сообщения</param>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.#ctor(System.Int64,Monitel.PlatformInfrastructure.DataIntegrity.ValidationSeverity,System.String,System.Int64,System.Guid)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId">Локальный идентификатор объекта</param>
            <param name="severity">Важность сообщения</param>
            <param name="message">Сообщение</param>
            <param name="ruleId">Локальный идентификатор правила</param>
            <param name="ruleUid">Уникальный идентификатор правила</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.ChoosePrecisionFormat(System.Double,System.Double,System.UInt32,System.UInt32)">
            <summary>Формирование строки вывода по формату g двух чисел с наиболее грубой точностью, которая всё же обеспечит отличие обликов чисел хотя бы в одном знаке</summary>
            <param name="a">Первое число</param>
            <param name="b">Второе число</param>
            <param name="minDigits">Минимально разрешённое количество значащих цифр</param>
            <param name="maxDigits">Максинимально разрешённое количество значащих цифр</param>
            <returns>Формат в стиле ":g12", где вместо 12 будет поставлено строковое представление подходящего количества значащих цифр,
            или null, если для вывода потребуется число значащих цифр, превышающее maxDigits</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.ToString(System.Double,System.Double,System.UInt32,System.UInt32)">
            <summary>Текстовое представление в формате g числа с минимальной точностью, гарантирующей отличие облика этого числа от облика другого указанного числа</summary>
            <param name="a">Отображаемое число</param>
            <param name="b">Число для опеределения нужного количества значащих цифр</param>
            <param name="minDigits">Минимально разрешённое количество значащих цифр</param>
            <param name="maxDigits">Максимально разрешённое количество значащих цифр</param>
            <returns>Текстовое представление числа a (левого аргумента)</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.CheckResult.IsEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>Пуста ли коллекция?</summary>
            <typeparam name="T">Тип элемента коллекции</typeparam>
            <param name="collection">Коллекция</param>
            <returns>Да/Нет</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.DataIntegrity.RuleSeveritySettings">
            <summary>
            Структура описания важности сообщений
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.Severity">
            <summary>
            Важность сообщения
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.RuleId">
            <summary>
            Локальный идентфиикатор правила формирующего сообщение
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.RuleUid">
            <summary>
            Уникальный идентфиикатор правила формирующего сообщение
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.Message">
            <summary>
            Сообщение об ошибке
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.ObjectId">
            <summary>
            Локальный идентификатор объекта
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.ObjectUid">
            <summary>
            Глобальный идентификатор объекта
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.ObjectClassId">
            <summary>
            Идентификатор класса, для контроля вхождения в профиль приложения
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.ObjectName">
            <summary>
            Основное имя объекта
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.ObjectAdditionalNames">
            <summary>
            Набор дополнительных имён объекта по их типам
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.EnObjectId">
            <summary>
            Идентификатор энерго объекта
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.EnObjectName">
            <summary>
            Имя энерго объекта
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.EnObjectAdditionalNames">
            <summary>
            Набор дополнительных имён объекта по их типам
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.MAObjectId">
            <summary>
            Идентификатор организации ответственной за моделирование
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.MAObjectName">
            <summary>
            Название организации ответственной за моделирование
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.MAOODUbjectId">
            <summary>
            Идентификатор ОДУ, к которому относится ответственная за моделирование организация
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.MAODUObjectName">
            <summary>
            Название ОДУ, к которому относится ответственная за моделирование организация
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.#ctor">
            <summary>
            конструктор по умолчанию
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.#ctor(Monitel.PlatformInfrastructure.DataIntegrity.CheckResult)">
            <summary>
            конструктор-конвертер, 
            поля EnObjectId, MaObjectId не заполняются
            </summary>
            <param name="resultItem"></param>
            <param name="modelImage"></param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DataIntegrity.ServerCheckResult.ToString">
            <summary>
            для отладки
            </summary>
            <returns></returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.DataIntegrity.ValidationSeverity">
            <summary>
            Серьезность правил валидации.
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DataIntegrity.ValidationSeverity.Information">
            <summary>
            Для информации - валидацию считать пройденной.
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DataIntegrity.ValidationSeverity.Warning">
            <summary>
            Для предупреждений - не критично - валидацию можно считать пройденной.
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.DataIntegrity.ValidationSeverity.Error">
            <summary>
            Для ошибок - валидация не прошла в любом случае.
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Directory.DirectoryHelper.GetCurrentDirectory">
            <summary>
            Универсальный метод для получения рабочей директории приложения 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Directory.DirectoryHelper.GetPathFileCurrentDirectory(System.String)">
            <summary>
            Универсальный метод для получения пути к файлу с указанным имененм, в
            рабочей директории приложения
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Directory.DirectoryHelper.GetPathFileCurrentDirectory(System.String,System.String)">
            <summary>
            Универсальный метод, позволяет получить полный путь к файлу с указанным именем в подпапке,
            относительно текущей
            </summary>
            <param name="subPath">подпапка, пример: PassportTemplates\images</param>
            <param name="fileName">имя файла</param>
            <returns>полный путь к файлу</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Directory.FileHelper.WhoIsLocking(System.String)">
            <summary>
            Выдаёт список процессов, использующих указанный файл
            Для сетевых путей возвращается только список процессов с текущего ПК.
            Если файл не используется, возвращается "-"
            Метод не возвращает исключений, в худжем случае вернётся "-".
            Предполагается использование для диагностики, после возникновения исключений при работе с файлами
            </summary>
            <param name="path">Path of the file.</param>
            <returns>Строка со списком имён процессов, использующих файл (если удалось получить)</returns>
            <remarks>See also:
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa373661(v=vs.85).aspx
            http://wyupdate.googlecode.com/svn-history/r401/trunk/frmFilesInUse.cs (no copyright in code at time of viewing)       
            </remarks>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.DnsUtils">
            <summary>
            Получение DNS-имен машины
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DnsUtils.GetCurrentMachineName">
            <summary>
            Получение dns-имени текущей машины
            </summary>
            <returns>имя</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DnsUtils.GetMachineName(System.String)">
            <summary>
            Получение dns-имени по netbios-имени или ip-адресу
            </summary>
            <param name="addr">имя или адрес</param>
            <returns>имя машины </returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.LeadingZeroCount(System.UInt32)">
            <summary>
            Count the number of leading zero bits in a mask.
            Similar in behavior to the x86 instruction LZCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.LeadingZeroCount(System.UInt64)">
            <summary>
            Count the number of leading zero bits in a mask.
            Similar in behavior to the x86 instruction LZCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.Log2(System.UInt32)">
            <summary>
            Returns the integer (floor) log of the specified value, base 2.
            Note that by convention, input value 0 returns 0 since Log(0) is undefined.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.Log2(System.UInt64)">
            <summary>
            Returns the integer (floor) log of the specified value, base 2.
            Note that by convention, input value 0 returns 0 since Log(0) is undefined.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.Log2SoftwareFallback(System.UInt32)">
            <summary>
            Returns the integer (floor) log of the specified value, base 2.
            Note that by convention, input value 0 returns 0 since Log(0) is undefined.
            Does not directly use any hardware intrinsics, nor does it incur branching.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.PopCount(System.UInt32)">
            <summary>
            Returns the population count (number of bits set) of a mask.
            Similar in behavior to the x86 instruction POPCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.PopCount(System.UInt64)">
            <summary>
            Returns the population count (number of bits set) of a mask.
            Similar in behavior to the x86 instruction POPCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.TrailingZeroCount(System.Int32)">
            <summary>
            Count the number of trailing zero bits in an integer value.
            Similar in behavior to the x86 instruction TZCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.TrailingZeroCount(System.UInt32)">
            <summary>
            Count the number of trailing zero bits in an integer value.
            Similar in behavior to the x86 instruction TZCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.TrailingZeroCount(System.Int64)">
            <summary>
            Count the number of trailing zero bits in a mask.
            Similar in behavior to the x86 instruction TZCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.TrailingZeroCount(System.UInt64)">
            <summary>
            Count the number of trailing zero bits in a mask.
            Similar in behavior to the x86 instruction TZCNT.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.RotateLeft(System.UInt32,System.Int32)">
            <summary>
            Rotates the specified value left by the specified number of bits.
            Similar in behavior to the x86 instruction ROL.
            </summary>
            <param name="value">The value to rotate.</param>
            <param name="offset">The number of bits to rotate by.
            Any value outside the range [0..31] is treated as congruent mod 32.</param>
            <returns>The rotated value.</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.RotateLeft(System.UInt64,System.Int32)">
            <summary>
            Rotates the specified value left by the specified number of bits.
            Similar in behavior to the x86 instruction ROL.
            </summary>
            <param name="value">The value to rotate.</param>
            <param name="offset">The number of bits to rotate by.
            Any value outside the range [0..63] is treated as congruent mod 64.</param>
            <returns>The rotated value.</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.RotateRight(System.UInt32,System.Int32)">
            <summary>
            Rotates the specified value right by the specified number of bits.
            Similar in behavior to the x86 instruction ROR.
            </summary>
            <param name="value">The value to rotate.</param>
            <param name="offset">The number of bits to rotate by.
            Any value outside the range [0..31] is treated as congruent mod 32.</param>
            <returns>The rotated value.</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.BitOperations.RotateRight(System.UInt64,System.Int32)">
            <summary>
            Rotates the specified value right by the specified number of bits.
            Similar in behavior to the x86 instruction ROR.
            </summary>
            <param name="value">The value to rotate.</param>
            <param name="offset">The number of bits to rotate by.
            Any value outside the range [0..63] is treated as congruent mod 64.</param>
            <returns>The rotated value.</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.FormatSingle(Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder@,System.Single,System.ReadOnlySpan{System.Char},System.Globalization.NumberFormatInfo)">
            <summary>Formats the specified value according to the specified format and info.</summary>
            <returns>
            Non-null if an existing string can be returned, in which case the builder will be unmodified.
            Null if no existing string was returned, in which case the formatted output is in the builder.
            </returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.FormatDouble(Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder@,System.Double,System.ReadOnlySpan{System.Char},System.Globalization.NumberFormatInfo)">
            <summary>Formats the specified value according to the specified format and info.</summary>
            <returns>
            Non-null if an existing string can be returned, in which case the builder will be unmodified.
            Null if no existing string was returned, in which case the formatted output is in the builder.
            </returns>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.CharToHexLookup">
            <summary>Map from an ASCII char to its hex value, e.g. arr['b'] == 11. 0xFF means it's not a hex digit.</summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.TryParseInt32IntegerStyle(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.Int32@)">
            <summary>Parses int limited to styles that make up NumberStyles.Integer.</summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.TryParseInt64IntegerStyle(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.Int64@)">
            <summary>Parses long inputs limited to styles that make up NumberStyles.Integer.</summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.TryParseUInt32IntegerStyle(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.UInt32@)">
            <summary>Parses uint limited to styles that make up NumberStyles.Integer.</summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.TryParseUInt32HexNumberStyle(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.UInt32@)">
            <summary>Parses uint limited to styles that make up NumberStyles.HexNumber.</summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.TryParseUInt64IntegerStyle(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.UInt64@)">
            <summary>Parses ulong limited to styles that make up NumberStyles.Integer.</summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.DoubleFormatter.TryParseUInt64HexNumberStyle(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.UInt64@)">
            <summary>Parses ulong limited to styles that make up NumberStyles.HexNumber.</summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.DoubleToStr.DoubleHelper">
            <summary>
            Класс выполняющий преобразование строки в число с плавающей точкой и наоборот
            !!!Использовать только в случае если вы понимаете зачем вам это нужно
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.GetPinnableReference">
            <summary>
            Get a pinnable reference to the builder.
            Does not ensure there is a null char after <see cref="P:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.Length"/>
            This overload is pattern matched in the C# 7.3+ compiler so you can omit
            the explicit method call, and write eg "fixed (char* c = builder)"
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.GetPinnableReference(System.Boolean)">
            <summary>
            Get a pinnable reference to the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.Length"/></param>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.RawChars">
            <summary>Returns the underlying storage of the builder.</summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.AsSpan(System.Boolean)">
            <summary>
            Returns a span around the contents of the builder.
            </summary>
            <param name="terminate">Ensures that the builder has a null char after <see cref="P:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.Length"/></param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder.Grow(System.Int32)">
            <summary>
            Resize the internal buffer either by doubling current buffer size or
            by adding <paramref name="additionalCapacityBeyondPos"/> to
            <see cref="F:Monitel.PlatformInfrastructure.DoubleToStr.ValueStringBuilder._pos"/> whichever is greater.
            </summary>
            <param name="additionalCapacityBeyondPos">
            Number of chars requested beyond current position.
            </param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Hash.HashTools.CalculateKnuthHash(System.String)">
            <summary>
            быстрый хешь строк
            </summary>
            <param name="stringValue"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Hash.HashTools.CalculateMurmur2Hash(System.Byte[])">
            <summary>
            хешь оптимизированный для больших байтовых массивов
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Hash.HashTools.CalculateXElementHash(System.Xml.Linq.XElement,System.Collections.Generic.HashSet{System.String})">
            <summary>
            алгоритм гарантирует получение одинакового хешь кода для документа на
            разных рабочих станциях
            при этом перестановка атрибутов или элементов xml документа не влияет 
            на результат. Работает медленнее XNodeComparer
            </summary>
            <param name="xmlDoc">анализируемый документ</param>
            <param name="ignoreNodeNames">указывает название элементов, которые не должны учитываться при вычислении хеша</param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Hash.Murmur2Hash.Hash(System.Byte[])">
            <summary>
            Хешь функция общего назначения
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.Hash.XElementHash">
            <summary>
            Гарантирует одинаковый хешь для одного и того же xml файла на разных ПК
            производительность проигрывает XNodeEqulityComparer
            При вычислении хеша исппользуются модификации алгоритмов Murmur и Knut.  
            Хешь не зависит от порядка следования элементов в xml, одинаковые xml
            файлы, с разным порядком элементов, будут давать одинаковые хеши. Есть
            возможность указать локальные имена элементов, которые не должны учитываться
            при вычислении хеша
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Helpers.x86Loader.LoadNativeDlls(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Загружает набор сборок из указанного места.
            Если часть библиотек не удаётся загрузить - список возвращаемых сообщений не будет пуст
            </summary>
            <param name="assemblyNameList">Имена сборок, которые необходимо загрузить в домен</param>
            <returns>Если отдельные сборки не удалось загрузить, то список сообщений будет не пустой</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.Logger.IPlatformLogger">
            <summary>
            Интерфейс логгера
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Logger.IPlatformLogger.Write(Monitel.PlatformInfrastructure.Logger.LogCategory,Monitel.PlatformInfrastructure.Logger.LogPriority,System.String,System.Object[])">
            <summary>
            Записывает сообщение
            </summary>
            <param name="message">Сообщение</param>
            <param name="category">Категория сообщения</param>
            <param name="priority">Приоритет сообщения</param>
            <param name="args">Параметры</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Logger.IPlatformLogger.Write(Monitel.PlatformInfrastructure.Logger.LogCategory,Monitel.PlatformInfrastructure.Logger.LogPriority,System.Boolean,System.String,System.Object[])">
            <summary>
            Записывает сообщение
            </summary>
            <param name="message">Сообщение</param>
            <param name="category">Категория сообщения</param>
            <param name="priority">Приоритет сообщения</param>
            <param name="args">Параметры</param>
            <param name="system">Признак сообщения, имеющего значение для системы в целом</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Logger.IPlatformLogger.SetHdrString(System.String,System.String)">
            <summary>
            Устанавливает строку заголовка журнала
            </summary>
            <param name="key">ключ</param>
            <param name="msg">строка</param>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Logger.IPlatformLogger.IsEnable">
            <summary>
            Определяет включен ли логгер
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Logger.IPlatformLogger.MinPriority">
            <summary>
            Возвращает минимальную установленую категорию
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.Logger.LogCategory">
            <summary>
            Список категорий записей логирования
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogCategory.Debug">
            <summary>
            Информация отладночного характера
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogCategory.Error">
            <summary>
            Информация о произощедшей ошибке
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogCategory.Warn">
            <summary>
            Предупреждение
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogCategory.Info">
            <summary>
            Информационное сообщение
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.Logger.LogIntegrator">
            <summary>
            Класс для объединения потоков логирования
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Logger.LogIntegrator.Add(Monitel.PlatformInfrastructure.Logger.IPlatformLogger)">
            <summary>
            Добовляет логгер
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Logger.LogIntegrator.Log(System.String,Monitel.PlatformInfrastructure.Logger.LogCategory,Monitel.PlatformInfrastructure.Logger.LogPriority)">
            <summary>
            Записывает сообщение
            </summary>
            <param name="message">Сообщение</param>
            <param name="category">Категория сообщения</param>
            <param name="priority">Приоритет сообщения</param>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Logger.LogIntegrator.IsEnable">
            <summary>
            Определяет включен ли логгер
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Logger.LogIntegrator.MinPriority">
            <summary>
            Возвращает минимальную установленую категорию
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.Logger.LogPriority">
            <summary>
            Приоритет в записях логирования
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogPriority.Highest">
            <summary>
            1
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogPriority.VeryHigh">
            <summary>
            2
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogPriority.High">
            <summary>
            3
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogPriority.Medium">
            <summary>
            4
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogPriority.Low">
            <summary>
            5
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogPriority.VeryLow">
            <summary>
            6
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.Logger.LogPriority.Lowest">
            <summary>
            7
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.Logger.StreamLogger">
            <summary>
            
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Logger.StreamLogger.IsEnable">
            <summary>
            Определяет включен ли логгер
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Logger.StreamLogger.MinPriority">
            <summary>
            Возвращает минимальную установленую категорию
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Logger.StreamLogger.#ctor(System.IO.TextWriter)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Logger.StreamLogger.Log(System.String,Monitel.PlatformInfrastructure.Logger.LogCategory,Monitel.PlatformInfrastructure.Logger.LogPriority)">
            <summary>
            Записывает сообщение
            </summary>
            <param name="message">Сообщение</param>
            <param name="category">Категория сообщения</param>
            <param name="priority">Приоритет сообщения</param>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.IContainer">
            <summary>
            Контейнер записимостей
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.IContainer.Resolve``1">
            <summary>
            Возвращает объект указаного типа, если подходящего объекта найти не удалось возвращаеться null
            </summary>
            <typeparam name="T">Тип объекта</typeparam>
            <returns></returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.IocContainer">
            <summary>
            Контейнер зависимостей
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.IocContainer.Resolve``1">
            <summary>
            Возвращает объект указаного типа, если подходящего объекта найти не удалось возвращаеться null
            </summary>
            <typeparam name="T">Тип объекта</typeparam>
            <returns>Объект указанного типа</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.IocContainer.Set``1(``0)">
            <summary>
            Добовляет или заменяет объект в контейнер
            </summary>
            <typeparam name="T">Тип объекта</typeparam>
            <param name="instance">Новый объект</param>
            <returns>Старый объект</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.MalGuid">
            <summary>
            Набор расширения для работы с GUID
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalGuid.MalUid.IsNull">
            <summary>
            Проверка: является ли объект нулевым 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalGuid.MalUid.IsSystem">
            <summary>
            Проверка: является ли идентификатор системным
            </summary>
            <returns></returns>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.MalGuid.Size">
            <summary>
            Размер структуры
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalGuid.IsNull(System.Guid)">
            <summary>
            Проверка: пуст ли Guid
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalGuid.IsSpecial(System.Guid)">
            <summary>
            Проверка: является ли Guid системным компании Monitel
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalGuid.PartA(System.Guid)">
            <summary>
            Возвращает старшие 4 байта в виде int
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalGuid.Compare(System.Guid,System.Guid)">
            <summary>
            Сравнение двух UID'ов
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.MalServiceHelper.MalPortForSetup">
            <summary>
            Порт, используемый MalService в процессе установки
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.MalServiceHelper.MalPort">
            <summary>
            Имя канала
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.MalServiceHelper.MalProcessId">
            <summary>
            Идентификатор процесса MAL
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.MalServiceHelper.MalMemory">
            <summary>
            Размер памяти, выделяемой для MalService.exe
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalServiceHelper.FindProcessById(System.Int32)">
            <summary>
            Ищет процесс с заданным ID
            </summary>
            <param name="processId">ID процесса</param>
            <returns>true - процесс найден</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalServiceHelper.StartMalService(System.String,System.UInt16)">
            <summary>
            Запускает службу MALService в случае успеха возвращает имя канала на котором запущенна служба
            </summary>
            <param name="malPath"></param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MalServiceHelper.StopMalService">
            <summary>
            Останавливает MALService
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.MonthDay.TryParse(System.String,System.DateTimeOffset@,System.Int32)">
            <summary>
            Метод разбора CIM примитива MonthDay, валидными считает следующие фарматы
            --MM-dd
            --MM-ddZ
            --MM-dd+07:00
            --MM-dd-07
            --MM-dd+7
            В качестве начального года ставит текущий, 
            </summary>
            <param name="str">Дата в исходном текстовом представлении</param>
            <param name="retVal">Дата, представленная классом DateTimeOffset</param>
            <param name="year">Год. По умолчанию – текущий</param>
            <returns>Признак успешности разбора</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher">
             <summary>
             Actions executing statistic
             </summary>
             example
             using(var action=ActionsPerfWatcher.Current.Begin(description:"some description"))
             {
                 do something
             }
            ------------------------------------------------------------------------------
             Thread(or name) [thread id]:
            ------------------------------------------------------------------------------
               |start time |Action name or caller method name  |end time  |total ms  |description
               |start time2|Action name or caller method name 2|end time 2|total ms 2|description 2
            ------------------------------------------------------------------------------
        </member>
        <member name="T:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo">
            <summary>
            Action description
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.Uid">
            <summary>
            Action unique identificator
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.ThreadId">
            <summary>
            Action thread id
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.ThreadName">
            <summary>
            Action thread name
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.Name">
            <summary>
            Action name
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.TimeStart">
            <summary>
            Action start time
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.TimeEnd">
            <summary>
            Action end time
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.Desription">
            <summary>
            Additional information
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo.TotalMs">
            <summary>
            Action duration
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.RunAction">
            <summary>
            Action
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.Current">
            <summary>
            Singleton
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.IsSuspended">
            <summary>
            Skip new actions
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.SuspendWatch">
            <summary>
            Suspend action processing
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ResumeWatch">
            <summary>
            Resume action processing
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.Begin(System.String,System.String)">
            <summary>
            Begin new action
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.End(Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ActionInfo)">
            <summary>
            End action
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.GetActions">
            <summary>
            Get current actions info
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.Configure(System.Boolean,System.Int32)">
            <summary>
            Configure watcher
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.PerfomanceTools.ActionsPerfWatcher.ClearHistory">
            <summary>
            Clear wathcer history
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.PerfomanceTools.OperationPerfomanceTable">
            <summary>
            класс позволяет выводить сведения по производительности участка кода (полученные через ряд StopWatch замеров)
            в одном сообщении лога
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PlatformSettings.MalPort">
            <summary>
            Порт публичного MAL
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.PlatformSettings.SystemMalPort">
            <summary>
            Порт системного MAL
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.ProfileVersionParser">
            <summary>
            Класс содержащий метод для преобразования версии профиля в System.Version
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.ProfileVersionParser.ParseProfileVersion(System.String)">
            <summary>
            Разбор строк с версией профиля
            </summary>
            <param name="pv">Строка описывающая версию профиля</param>
            <returns>ver-базовая версия,ext-версия расширения,opt-опции лицензий</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.ProfileVersionParser.TryParse(System.String,System.Version@)">
            <summary>
            Метод преобразования текстовой версии профиля в System.Version
            </summary>
            <param name="profileVersion">Текстовое представление версии профиля</param>
            <param name="version">Созданная версия, если разбор не удался содержит 1.0.0.0</param>
            <returns>Если преобразование удалось True</returns>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.IsStarted">
            <summary>
            Служба запущенна
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.IsConnected">
            <summary>
            Служба активна
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.Start">
            <summary>
            Запускает обёртку
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.Stop">
            <summary>
            Запускает обёртку
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.Restart">
            <summary>
            Перезапускает службу
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.WaitConnection">
            <summary>
            Блокирует поток до тех пор пока не будет создано подключение
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.InternalStart(System.Threading.CancellationTokenSource)">
            <summary>
            Запускает цикл перезапуска
            </summary>
            <param name="token">Переменная для остановки</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.Reconnection.ReconnectionWrapper.Dispose">
            <summary>
            Освобождает ресурсы
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.ResourceUids.ResourceUids.GetResourceName(System.Guid)">
            <summary>
            Возвращает описание стандартного ресурса СК-11, заданного с помощью Uid
            </summary>
            <param name="resourceUid">Guid требуемого ресурса</param>
            <returns></returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.StreamExt.ReadOnlyStream">
            <summary>
            обёртка над Stream классами, используется в
            подисистеме конвертеров для нормализации параметров исходного
            потока (только чтение, доступность операции Seek)
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.TextTools.LevenshteinSort">
            <summary>
            Класс для сортировки строк по алгоритму Левенштейна
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TextTools.LevenshteinSort.Sort(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Сортировка списка строк с использованием алгоритма Левенштейна
            </summary>
            <param name="findStr">Строка, которую необходимо найти</param>
            <param name="strList">Список строк, в котором будет осуществляться поиск</param>
            <returns>Список строк отсортированный по "расстоянию Левенштейна"</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TextTools.LevenshteinSort.Sort``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
             Сортировка списка объектов с использованием алгоритма Левенштейна
            </summary>
            <typeparam name="T">Тип объекта</typeparam>
            <param name="findStr">Строка, которую необходимо найти</param>
            <param name="objList">Список объектов, в котором будет осуществляться поиск</param>
            <param name="strSelector">Функция получения строки из объекта</param>
            <returns>Список объектов отсортированный по "расстоянию Левенштейна"</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TextTools.LevenshteinSort.SortEx``1(System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.Collections.Generic.IComparer{Monitel.PlatformInfrastructure.TextTools.DLDistance})">
            <summary>
            Сортировка списка объектов
            </summary>
            <typeparam name="T">Тип объекта</typeparam>
            <param name="findStr">Строка, которую необходимо найти</param>
            <param name="objList">Список объектов, который требуется отсортировать</param>
            <param name="strSelector">Функция получения строки из объекта</param>
            <param name="distanceComparer">Сравнение расстояний, если не задано, то используется сравнение по величине расстояния</param>
            <returns>Отсортированный список объектов и расстояний</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TextTools.LevenshteinSort.ComputeLevenshteinDistance(System.String,System.String)">
            <summary>
            Расчет количества операций, необходимое для преобразования первой строки во вторую
            </summary>
            <param name="first">первая строка</param>
            <param name="second">вторая строка</param>
            <returns>количество операций по преобразованию</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TextTools.LevenshteinSort.DamerauLevenshteinDistance(System.String,System.String,System.Boolean)">
            <summary>
            Расчет количества операций, необходимое для преобразования первой строки во вторую
            </summary>
            <param name="string1">первая строка</param>
            <param name="string2">вторая строка</param>
            <param name="calcMatches">заполнить структуру совпадений</param>
            <returns>Структура содержащая количество операций по преобразованию и информацию о совпавших подстроках</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.TextTools.Transliterator">
            <summary>
            Класс для выполнения транслитерации
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.TextTools.Transliterator.TransliterationArrayRuToEn">
            <summary>
            Массив транслитерации с русского в английский
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TextTools.Transliterator.RuToEn(System.String)">
            <summary>
            Выполняет транслитерацию русских символов в английские
            </summary>
            <param name="str">Исходная строка</param>
            <returns>Результирующая строка</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.ThreadPool.OperationCollector">
            <summary>
            класс для сборка статистики и отмены операций в случае необходимости
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.TimeConvert.Converter">
            <summary>
            Предоставляет функции преобразования времени
            Поддерживает два варианта локального времени - местное и время центрального офиса
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.TimeConvert.Converter.TimeMode">
            <summary>
            Вариант локального времени
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.TimeConvert.Converter.TimeMode.Local">
            <summary>
            Местное локальное время
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.TimeConvert.Converter.TimeMode.Headquater">
            <summary>
            Локальное время центрального офиса
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.GetConfigPath(Monitel.PlatformInfrastructure.TimeConvert.Converter.TimeMode)">
            <summary>
            Возвращает путь к файлу конфигурации
            </summary>
            <param name="timeMode">Тип локального времени</param>
            <returns>Путь к файлу конфигурации</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.SetConfigPath(Monitel.PlatformInfrastructure.TimeConvert.Converter.TimeMode,System.String)">
            <summary>
            Устанавливает путь к файлу конфигурации
            </summary>
            <param name="timeMode">Тип локального времени</param>
            <param name="path">Путь к файлу конфигурации</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.LocalToSystem(System.DateTime)">
            <summary>
            Преобразование локального времени в системное 
            Если локальное время относится к повторяющемуся интервалу при переходе лето-зима, то берется время, 
            соответствующее текущему
            </summary>
            <param name="value">Локальное время</param>
            <returns>Системное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.SystemToLocal(System.DateTime)">
            <summary>
            Преобразование системного времени в локальное
            </summary>
            <param name="value">Системное время</param>
            <returns>Локальное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.LocalToSystemEx(System.DateTime,System.Boolean)">
            <summary>
            Преобразование локального времени в системное 
            с указанием какое время взять в случае если оно относится к повторяющемуся интервалу при переходе лето-зима
            </summary>
            <param name="value">Локальное время</param>
            <param name="IsSummer">Если время относится к повторяющемуся интервалу при переходе лето-зима, то взять летнее</param>
            <returns>Системное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.SystemToLocalEx(System.DateTime,Monitel.PlatformInfrastructure.TimeConvert.DateTimeType@)">
            <summary>
            Преобразование системного времени в локальное
            </summary>
            <param name="value">Системное время</param>
            <param name="dtType">Тип локального времени</param>
            <returns>Локальное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.LocalHqToSystemEx(System.DateTime,System.Boolean)">
            <summary>
            Преобразование локального времени центрального офиса в системное 
            с указанием какое время взять в случае если оно относится к повторяющемуся интервалу при переходе лето-зима
            </summary>
            <param name="value">Локальное время</param>
            <param name="IsSummer">Если время относится к повторяющемуся интервалу при переходе лето-зима, то взять летнее</param>
            <returns>Системное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.SystemToLocalHqEx(System.DateTime,Monitel.PlatformInfrastructure.TimeConvert.DateTimeType@)">
            <summary>
            Преобразование системного времени в локальное время центрального офиса
            </summary>
            <param name="value">Системное время</param>
            <param name="dtType">Тип локального времени</param>
            <returns>Локальное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.LocalToLocalHqEx(System.DateTime,Monitel.PlatformInfrastructure.TimeConvert.DateTimeType@)">
            <summary>
            Преобразование местного локального времени в локальное время центрального офиса
            </summary>
            <param name="value">Местое время</param>
            <param name="dtType">Тип локального времени</param>
            <returns>Время центрального офиса</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.Converter.LocalHqToLocalEx(System.DateTime,Monitel.PlatformInfrastructure.TimeConvert.DateTimeType@)">
            <summary>
            Преобразование локального времени центрального офиса в местное локальное время
            </summary>
            <param name="value">Время центрального офиса</param>
            <param name="dtType">Тип локального времени</param>
            <returns>Местое время</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.TimeConvert.StDlPoints">
            <summary>
            Точки переходов зима-лето
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.TimeConvert.StDlPoints.Dl1SystemTime">
            <summary>
            Системеное время начала периода летнего времени
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.TimeConvert.StDlPoints.Dl2SystemTime">
            <summary>
            Системеное время окончания периода летнего времени
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.TimeConvert.StDlPoints.Dl1LocalTime">
            <summary>
            Локальное время начала периода летнего времени (летнее)
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.TimeConvert.StDlPoints.Dl2StartLocalTime">
            <summary>
            локальное время начала повторяющегося интервала при переходе на зиму
            </summary>
        </member>
        <member name="P:Monitel.PlatformInfrastructure.TimeConvert.StDlPoints.Dl2EndLocalTime">
            <summary>
            локальное время окончания повторяющегося интервала при переходе на зиму
            </summary>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.TimeConvert.TimeConverter">
            <summary>
            Предоставляет функции преобразования времени
            </summary>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.TimeConverter.#ctor(System.IO.Stream)">
            <summary>
            Конструктор
            </summary>
            <param name="config">Конфигурация с правилами преобразования времени из системного в локальное</param>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.TimeConverter.LocalToSystem(System.DateTime)">
            <summary>
            Преобразование локального времени в системное 
            Если локальное время относится к повторяющемуся интервалу при переходе лето-зима, то берется время, 
            соответствующее текущему
            </summary>
            <param name="value">Локальное время</param>
            <returns>Системное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.TimeConverter.SystemToLocal(System.DateTime)">
            <summary>
            Преобразование системного времени в локальное
            </summary>
            <param name="value">Системное время</param>
            <returns>Локальное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.TimeConverter.LocalToSystemEx(System.DateTime,System.Boolean)">
            <summary>
            Преобразование локального времени в системное 
            с указанием какое время взять в случае если оно относится к повторяющемуся интервалу при переходе лето-зима
            </summary>
            <param name="value">Локальное время</param>
            <param name="IsSummer">Если время относится к повторяющемуся интервалу при переходе лето-зима, то взять летнее</param>
            <returns>Системное время</returns>
        </member>
        <member name="M:Monitel.PlatformInfrastructure.TimeConvert.TimeConverter.SystemToLocalEx(System.DateTime,Monitel.PlatformInfrastructure.TimeConvert.DateTimeType@)">
            <summary>
            Преобразование системного времени в локальное
            </summary>
            <param name="value">Системное время</param>
            <param name="dtType">Тип локального времени</param>
            <returns>Локальное время</returns>
        </member>
        <member name="T:Monitel.PlatformInfrastructure.TimeConvert.DateTimeType">
            <summary>
            Тип локального времени
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.TimeConvert.DateTimeType.Simple">
            <summary>
            Не относится к переходу лето-зима
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.TimeConvert.DateTimeType.Standart">
            <summary>
            Относится ко второму (зимнему) интервалу, повторяющемуся при переходе лето-зима
            </summary>
        </member>
        <member name="F:Monitel.PlatformInfrastructure.TimeConvert.DateTimeType.Daylight">
            <summary>
            Относится к первому (летнему) интервалу, повторяющемуся при переходе лето-зима
            </summary>
        </member>
        <member name="T:Monitel.Localization.LocaleManager">
            <summary>
            Менеджер ресурсов в рамках одной формы (контрола), либо в рамках задания пользователем
            </summary>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.#ctor">
            <summary>
            Конструктор элементов по умолчанию
            </summary>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.#ctor(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.String,System.Boolean)">
            <summary>
            Основной конструктор
            </summary>
            <param name="resourcePath">Папка с ресурсами локализации</param>
            <param name="appName">Прямой путь к файлу локализации, для отладки</param>
            <param name="localeRootFileName">Название локализованного элемента (название файла локазизации)</param>
            <param name="rootLanguage">Локализация по умолчанию</param>
            <param name="language">Текущая локализация</param>
            <param name="fileType">Расширение файла ресурса. Влияет на тип выбираемого загрузчика</param>
            <param name="differentFolders">Хранить разные языки в разных подпапках</param>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Конструктор с указанием расположения ресурса локализации и базового языка
            </summary>
            <param name="resourcePath">Папка с ресурсами локализации</param>
            <param name="localeRootFileName">Название локализованного элемента (название файла локазизации)</param>
            <param name="rootLanguage">Локализация по умолчанию</param>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.#ctor(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Конструктор с указанием расположения ресурса локализации и базового языка
            </summary>
            <param name="resourcePath">Папка с ресурсами локализации</param>
            <param name="localeRootFileName">Название локализованного элемента (название файла локазизации)</param>
            <param name="rootLanguage">Локализация по умолчанию</param>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.#ctor(System.String,System.String,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Конструктор со всеми желательными параметрами, кроме параметра типа файла, который принят как "resx", и текущего языка
            </summary>
            <param name="resourcePath">Папка с ресурсами локализации</param>
            <param name="localeRootFileName">Название локализованного элемента (название файла локазизации)</param>
            <param name="rootLanguage">Локализация по умолчанию</param>
            <param name="language">Текущая локализация</param>
            <param name="differentFolders">Хранить разные языки в разных подпапках</param>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.#ctor(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Конструктор со всеми параметрами, кроме параметра типа файла, который принят как "resx"
            </summary>
            <param name="resourcePath">Папка с ресурсами локализации</param>
            <param name="localeRootFileName">Название локализованного элемента (название файла локазизации)</param>
            <param name="rootLanguage">Локализация по умолчанию</param>
            <param name="language">Текущая локализация</param>
            <param name="differentFolders">Хранить разные языки в разных подпапках</param>
        </member>
        <member name="P:Monitel.Localization.LocaleManager.RootLocale">
            <summary>
            Текущая базовая культура локализации
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocaleManager.Locales">
            <summary>
            Лист доступных культур
            </summary>
        </member>
        <member name="F:Monitel.Localization.LocaleManager._folder">
            <summary>
            Папка к файлам локализации
            </summary>
        </member>
        <member name="F:Monitel.Localization.LocaleManager._fileType">
            <summary>
            Тип файла ресурса
            </summary>
            <remarks>
            Определяет, какой именно ридер ресурса использовать
            </remarks>
        </member>
        <member name="F:Monitel.Localization.LocaleManager._langRootResourceSet">
            <summary>
            Хранилище языковых ресурсов
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocaleManager.Languages">
            <summary>
            Лист доступных языков локализации
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocaleManager.Locale">
            <summary>
            Текущая локаль
            </summary>
            <remarks>
            Нижний уровень локализации, отвечающий за наречие языка. Все поля замещают поля верхнего уровня.
            </remarks>
        </member>
        <member name="P:Monitel.Localization.LocaleManager.LocaleRootFileName">
            <summary>
            Название элемента локализации
            </summary>
            <remarks>
            Первая часть файла ресурса, до точки, потом в названии идет обозначение языковой группы и наречия
            </remarks>
        </member>
        <member name="P:Monitel.Localization.LocaleManager.DifferentFolders">
            <summary>
            Способ хранения ресурсов локализации: в стиле Microsoft или в одной папке
            </summary>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.Update">
            <summary>
            Обновить содержание ресурса по настройкам
            </summary>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.IsValidLanguage(System.Globalization.CultureInfo)">
            <summary>
            Есть ли данный язык в списке поддерживаемых
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.GetObject(System.String)">
            <summary>
            Получить объект из локали по его идентификатору
            </summary>
            <param name="id">Идентификатор текста</param>
            <returns>Объект из текущей локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.GetObject(System.String,System.Boolean)">
            <summary>
            Получить объект из локали по его идентификатору
            </summary>
            <param name="id">Идентификатор текста</param>
            <param name="ignoreCase">Игнорировать регистр</param>
            <returns>Объект из текущей локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.GetString(System.String)">
            <summary>
            Получить строку из локали по ее идентификатору
            </summary>
            <param name="id">Идентификатор текста</param>
            <returns>Строка из текущей локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.GetString(System.String,System.Boolean)">
            <summary>
            Получить строку из локали по ее идентификатору
            </summary>
            <param name="id">Идентификатор текста</param>
            <param name="ignoreCase">Игнорировать регистр</param>
            <returns>Строка из текущей локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.GetFormated(System.String,System.Object[])">
            <summary>
            Получить строку из локали по ее идентификатору и отформатировать ее
            </summary>
            <param name="id">Идентификатор текста</param>
            <param name="args">Вставляемые в полученную строку объекты формата</param>
            <returns>Строка из текущей локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocaleManager.GetLocales(System.String,System.String)">
            <summary>
            Получить список доступных локалей для приложения
            </summary>
            <param name="folder"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:Monitel.Localization.LocalizationManager">
            <summary>
            Глобальный мониторинг и управление ресурсами локализации WPF форм, кода, WinForms и т.д. в рамках одного домена приложения
            </summary>
        </member>
        <member name="E:Monitel.Localization.LocalizationManager.LocaleChange">
            <summary>
            Событие смены языка локализации
            </summary>
        </member>
        <member name="F:Monitel.Localization.LocalizationManager.Warning">
            <summary>
            Предупреждение о несоответствии в ресурсах локализации
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocalizationManager.UseCommon">
            <summary>
            Использовать ли подборку общих идентификаторов локализаций
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocalizationManager.RootLocale">
            <summary>
            Текущая базовая культура локализации
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocalizationManager.RootLocaleName">
            <summary>
            Текущая базовая культура локализации
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocalizationManager.Locale">
            <summary>
            Текущая локаль
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocalizationManager.LocaleName">
            <summary>
            Краткое текстовое наименование текущей локали
            </summary>
        </member>
        <member name="P:Monitel.Localization.LocalizationManager.DefaultPath">
            <summary>
            Расположение папки с ресурсами локализации, которые используются если при запросе путь не задан явно
            </summary>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetLocales(System.String,System.String)">
            <summary>
            Получить набор доступных локалей для определенного приложения, лежащих в заданной каталоге
            </summary>
            <param name="path">Путь к папке с ресурсами локализации</param>
            <param name="localeId">Идентификатор локализации</param>
            <returns>Набор доступных локалей</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetLocales(System.String)">
            <summary>
            Получить набор доступных локалей для определенного приложения
            </summary>
            <param name="localeId">Идентификатор локализации</param>
            <returns>Набор доступных локалей</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetLanguages(System.String,System.String)">
            <summary>
            Получить набор языков для определенного приложения, лежащих в заданной каталоге
            </summary>
            <param name="path">Путь к папке с ресурсами локализации</param>
            <param name="localeId">Идентификатор локализации</param>
            <returns>Набор доступных языков</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetLanguages(System.String)">
            <summary>
            Получить набор языков для определенного приложения
            </summary>
            <param name="localeId">Идентификатор локализации</param>
            <returns>Набор доступных языков</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetResourceManager(System.String,System.String)">
            <summary>
            Получить менеджер ресурсов для полной локали
            </summary>
            <param name="path">Путь к папке с ресурсами локализации</param>
            <param name="localeId">Идентификатор локали</param>
            <returns>Менеджер ресурсов локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetResourceManager(System.String)">
            <summary>
            Получить менеджер ресурсов для полной локали
            </summary>
            <param name="localeId">Идентификатор локали</param>
            <returns>Менеджер ресурсов локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.ReleaseResourceManager(System.String)">
            <summary>
            Почистить и удалить один из ресурсов локализации
            </summary>
            <param name="localeId">Идентификатор локали</param>
            <returns>Успешность операции</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.ReleaseAllResources">
            <summary>
            Подчистить все загруженные ресурсы
            </summary>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetValue(System.String)">
            <summary>
            Получить локализованный объект из ресурсного файла с идентификатором, равным названию вызывающей сборки
            </summary>
            <param name="resourceId">Идентификатор строки ресурса</param>
            <returns></returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetValue(System.String,System.String)">
            <summary>
            Из определенной подборки ресурсов получить определенный объект ресурсов
            </summary>
            <param name="localeId">Имя файла ресурса локализации</param>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetValue(System.String,System.String,System.Boolean)">
            <summary>
            Получить объект из локали по его идентификатору
            </summary>
            <param name="resourceId">Идентификатор текста</param>
            <param name="ignoreCase">Игнорировать регистр</param>
            <returns>Объект из текущей локали</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetValue(System.String,System.String,System.String)">
            <summary>
            Из определенной подборки ресурсов, лежащей в заданном каталоге, получить определенный объект ресурсов
            Метод для использования в режиме отладки форм
            </summary>
            <param name="path">Путь к папке с ресурсами локализации</param>
            <param name="localeId">Имя файла ресурса локализации</param>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetString(System.String)">
            <summary>
            Из ресурса с названием, равным названию вызывающей сборки или заданным в ее параметрах, получить строку по ее идентификатору
            </summary>
            <param name="resourceId">Идентификатор (путь) к тексту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetString(System.String,System.String)">
            <summary>
            Из определенной подборки ресурсов получить строку по ее идентификатору
            </summary>
            <param name="localeId">Имя файла ресурса локализации</param>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetString(System.String,System.String,System.Boolean)">
            <summary>
            Из определенной подборки ресурсов получить строку по ее идентификатору
            </summary>
            <param name="localeId">Имя файла ресурса локализации</param>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetString(System.String,System.String,System.String)">
            <summary>
            Из определенной подборки ресурсов, лежащей в заданном каталоге, получить определенную строку
            Метод для использования в режиме отладки форм
            </summary>
            <param name="path">Путь к папке с ресурсами локализации</param>
            <param name="localeId">Имя файла ресурса локализации</param>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetStringFormat(System.String,System.String,System.Object[])">
            <summary>
            Анлог метода String.Format(), за исключением того, что при отсутствии аргументов не возникает исключительной ситуации
            </summary>
            <param name="localeId">Локаль с ресурсами</param>
            <param name="resourceId">Ресурс локализации к строке форматирования</param>
            <param name="args">Аргументы для подстановки в строку форматирования</param>
            <returns>Отформатированная строка</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetFormated(System.String,System.Object[])">
            <summary>
            Из подборки ресурсов с идентификатором, равным названию вызывающей сборки, получить строку по ее идентификатору с заменой элементов форматирования
            </summary>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetFormatedInLocale(System.String,System.String,System.Object[])">
            <summary>
            Из определенной подборки ресурсов получить строку по ее идентификатору с заменой элементов форматирования
            </summary>
            <param name="localeId">Имя файла ресурса локализации</param>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.LocalizationManager.GetFormatedFromPath(System.String,System.String,System.String,System.Object[])">
            <summary>
            Из определенной подборки ресурсов, лежащей в заданном каталоге, получить определенную строку с заменой элементов форматирования
            Метод для использования в режиме отладки форм
            </summary>
            <param name="path">Путь к папке с ресурсами локализации</param>
            <param name="localeId">Имя файла ресурса локализации</param>
            <param name="resourceId">Идентификатор (путь) к объекту</param>
            <returns>Значение элемента ресурса</returns>
        </member>
        <member name="M:Monitel.Localization.ResourceTable.#ctor(System.String,System.String)">
            <summary>
            Только для создания пустого хранилища
            </summary>
        </member>
        <member name="T:Monitel.Performance.IAssignableCounter">
            <summary>
            Счётчик с задаваемым значением
            </summary>
        </member>
        <member name="T:Monitel.Performance.IIncrementableCounter">
            <summary>
            Инкрементируемый счётчик
            </summary>
        </member>
        <member name="T:Monitel.Performance.ICountersCollection">
            <summary>
            Группа счётчиков
            </summary>
        </member>
        <member name="P:Monitel.Performance.ICountersCollection.Name">
            <summary>
            Название группы счётчиков
            </summary>
        </member>
        <member name="M:Monitel.Performance.ICountersCollection.CreateIndicatorCounter(System.String,System.String)">
            <summary>
            Создаёт в группе счётчик с задаваемым значением
            </summary>
        </member>
        <member name="M:Monitel.Performance.ICountersCollection.CreateAverageIndicatorCounter(System.String,System.String,System.Int32)">
            <summary>
            Создаёт в группе счётчик вычисления среднего значения
            </summary>
        </member>
        <member name="M:Monitel.Performance.ICountersCollection.CreateNumberOfItemsCounter(System.String,System.String)">
            <summary>
            Создаёт в группе инкрементируемый счётчик для отображения значения количества
            </summary>
        </member>
        <member name="M:Monitel.Performance.ICountersCollection.CreateUpdateRateCounter(System.String,System.String,System.TimeSpan)">
            <summary>
            Создаёт в группе инкрементируемый счётчик для отображения темпа изменения значения
            </summary>
        </member>
        <member name="M:Monitel.Performance.ICountersCollection.FinishCreate">
            <summary>
            Выполняет инициализацию созданных в группе счётчиков
            </summary>
        </member>
        <member name="T:Monitel.Performance.ICountersCollectionFactory">
            <summary>
            Конструктор групп счётчиков
            </summary>
        </member>
        <member name="T:Monitel.Performance.CountersLoader">
            <summary>
            Класс инициализации счётчиков
            </summary>
        </member>
        <member name="P:Monitel.Performance.CountersLoader.Factory">
            <summary>
            Возвращает конструктор групп счётчиков
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ActionsQueue">
            <summary>
            С выделенным потоком
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Monitel.Protocol.Common.ActionsQueue.#ctor(Monitel.Protocol.Common.IEventsDispatcher{System.Action})" -->
        <member name="T:Monitel.Protocol.Common.ActionsQueueOverThreadPool">
            <summary>
            С использованием пула потоков
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ActionsQueueOverThreadPool.Wait(System.TimeSpan)">
            <summary>
            Ожидает завершения выполнения
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.AppConfig.Read(System.String[])">
            <summary>
            Для загрузки значений параметров из командной строки
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.AppConfig.Read(System.String)">
            <summary>
            Загружает значения параметров из файла в формате свойств
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.AppConfig.Read(System.IO.Stream)">
            <summary>
            Загружает значения в формате файла свойств
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.AppConfig.ReadJson(System.String)">
            <summary>
            Загружает значения параметров из файла в формате JSON
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.AppConfig.ReadJson(System.String,Monitel.Protocol.Common.TraceLoggerSupport.WriteDelegate,System.String)">
            <summary>
            Чтение настроек с наложением файла настроек по-умолчанию
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.AppConfigProperty.Name">
            <summary>
            Имя атрибута
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.AppConfigProperty.Description">
            <summary>
            Описание атрибута
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.IDataBuffer`1">
            <summary>
            Буфер фиксированной ёмкости
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.IDataBuffer`1.Capacity">
            <summary>
            Ёмкость буфера
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.IDataBuffer`1.Size">
            <summary>
            Размер буфера
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IDataBuffer`1.Clear">
            <summary>
            Очистка буфера
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IDataBuffer`1.Reset">
            <summary>
            Полная очистка буфера
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.IDataBuffer`1.PutIndex">
            <summary>
            Индекс включаемого элемента
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IDataBuffer`1.Put(`0)">
            <summary>
            Включает элемент в буфер
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IDataBuffer`1.PutInc(System.Int32)">
            <summary>
            Увеличивает размер буфера
            Возвращает фактическое значение величины инкремента
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.IDataBuffer`1.GetIndex">
            <summary>
            Индекс извлекаемого элемента
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IDataBuffer`1.Rewind">
            <summary>
            Подготовка к последовательному извлечению из буфера от начала
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IDataBuffer`1.GetInc(System.Int32)">
            <summary>
            Пропуск элементов в заданном количестве
            Возвращает фактическое количество пропущенных элементов
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.IDataBuffersExchange`2">
            <summary>
            Контейнер свободных повторно используемых буферов
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.CompositeDataBuffer`2">
            <summary>
            Составной буфер
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.CompositeDataBuffer`2.MoveTo(Monitel.Protocol.Common.CompositeDataBuffer{`0,`1})">
            <summary>
            После перемещения данных в другой буфер с оригиналом не разрешены ни какие действия кроме возврата
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.CompositeDataBuffer`2.PutIndex">
            <summary>
            Не использовать
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.CompositeDataBuffer`2.Fit(System.Int32)">
            <summary>
            Получить буфер, в который можно записать указанное количество элементов
            Если включить указанное количество элементов нельзя, возвращает null
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.CompositeDataBuffer`2.BuffersCount">
            <summary>
            Количество буферов
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.CompositeDataBuffer`2.GetBufferIndex">
            <summary>
            Индекс текущего буфера извлечения данных
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.CompositeDataBuffer`2.NextGetBuffer">
            <summary>
            Инкремент индекса буфера извлечения данных
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.CompositeDataBuffer`2.GetIndex">
            <summary>
            Не использовать
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.CompositeDataBuffer`2.AvailableInGetBuffer">
            <summary>
            Количество элментов, доступных в текущем буфере
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.CompositeDataBuffer`2.GetAvailable">
            <summary>
            Есть данные для извлечения
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.DataBuffer`1">
            <summary>
            Буфер
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.DataBuffer`1.Capacity">
            <summary>
            Ёмкость буфера (максимально возможное для хранения количество элементов)
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.DataBuffer`1.Size">
            <summary>
            Размер (степень заполнения) буфера (количество хранимых элементов)
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffer`1.Clear">
            <summary>
            Очистка буфера без изменения флагов блокировки
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffer`1.Reset">
            <summary>
            Очистка буфера со сбросом флагов блокировки
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffer`1.Rewind">
            <summary>
            "Перемотка" для последовательного извлечения данных от начала
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.DataBuffer`1.FirstValueIndex">
            <summary>
            Ассоциация первого элемента со знчением внешнего индекса
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.DataBuffer`1.GetIndex">
            <summary>
            Индекс извлекаемого элемента
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.DataBuffer`1.PutIndex">
            <summary>
            Индекс включаемого элемента
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffer`1.Put(`0)">
            <summary>
            Запись элемента в буфер
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.DataBuffer`1.Data">
            <summary>
            Возвращает ссылку на массив с данными
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffer`1.PutInc(System.Int32)">
            <summary>
            Инкремент размера буфера при прямом помещении элементов в буфер
            Возвращает фактическое значение величины инкремента
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffer`1.GetInc(System.Int32)">
            <summary>
            Пропуск элементов в заданном количестве
            Возвращает фактическое количество пропущенных элементов
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ByteBuffer">
            <summary>
            Буфер элементов типа BYTE
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.CompositeByteBuffer">
            <summary>
            Составной буфер
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.DataBufferFactory`1">
            <summary>
            Фабрика экземпляров буфера
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.DataBuffersQueue`2">
            <summary>
            Очередь буферов
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Monitel.Protocol.Common.DataBuffersQueue`2.RetrieveGetBuffer" -->
        <member name="M:Monitel.Protocol.Common.DataBuffersQueue`2.PeekGetBuffer">
            <summary>
            Просмотр заполненного буфера в начале очереди заполненных буферов без удаления из очереди
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffersQueue`2.PeekGetBuffers">
            <summary>
            Просмотр всех буферов в очереди заполненных без удаления
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffersQueue`2.ReturnBuffer(`0)">
            <summary>
            Возврат извлечённого буфера
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.DataBuffersQueue`2.RegisterFilledBuffer(`0)">
            <summary>
            Передача заполненного буфера
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.DataHistory`1">
            <summary>
            История изменения данных
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Post(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Post(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Post(`0,Monitel.Protocol.Common.EventListener{`0},Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки и указанным получаетелем, и зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Send(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Send(`0,Monitel.Protocol.Common.EventListener{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IEventsDispatcher`1.Enqueue(`0,Monitel.Protocol.Common.EventListener{`0},Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправка в очередь событий без активации передачи
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Post(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Post(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Post(`0,Monitel.Protocol.Common.EventListener{`0},Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки и указанным получаетелем, и зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Send(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Send(`0,Monitel.Protocol.Common.EventListener{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherCore`1.Activate">
            <summary>
            Активация передачи события
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.EventsDispatcher`1">
            <summary>
            Диспетчер распределения событий из специализированного потока
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Post(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Post(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Post(`0,Monitel.Protocol.Common.EventListener{`0},Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки и указанным получаетелем, и зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Send(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Send(`0,Monitel.Protocol.Common.EventListener{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcher`1.Enqueue(`0,Monitel.Protocol.Common.EventListener{`0},Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправка в очередь событий без активации передачи
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1">
            <summary>
            Диспетчер распределения событий на основе пула потоков (медленный, всегда в работе)
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Post(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Post(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Post(`0,Monitel.Protocol.Common.EventListener{`0},Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки и указанным получаетелем, и зарегистрированными получателями
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Send(`0,Monitel.Protocol.Common.EventListener{`0})">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Send(`0,Monitel.Protocol.Common.EventListener{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки указанным получателем с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Send(`0,Monitel.Protocol.Common.IEventSource{`0},System.Int32)">
            <summary>
            Отправляет событие для обработки зарегистрированными получателями с ожиданием завершения
            Для работы удаления событий по таймауту использования необходима работа ResetableTime.Default
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Enqueue(`0,Monitel.Protocol.Common.EventListener{`0},Monitel.Protocol.Common.IEventSource{`0})">
            <summary>
            Отправка в очередь событий без активации передачи
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventsDispatcherOverThreadPool`1.Wait(System.TimeSpan)">
            <summary>
            Ожидает завершения выполнения
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.EventSource`1.ProcessOwnEvent(`0)">
            <summary>
            Для возможности получения собственного события в момент обработки
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.FunctionsQueue">
            <summary>
            С выделенным потоком
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.TraceLoggerSupport.ICategory">
            <summary>
            Категория записи
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.TraceLoggerSupport.ILevel">
            <summary>
            Уровень важности
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ITraceLogger">
            <summary>
            Интерфейс журнала
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.LogArea">
            <summary>
            Идентификатор области журналирования
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.LogAreas">
            <summary>
            Предопределённый области журналирования
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.LogLevel">
            <summary>
            Идентификатор уровня подробности
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.Logger">
            <summary>
            Журнал
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.LoggerConstructor">
            <summary>
            Делегат конструктора журнала
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.LoggersGroup.Constructor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.RTObjectsHistory`1">
            <summary>
            Очередь хранимых в реальном времени объектов
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.RTIndexedObjectsHistory`1">
            <summary>
            Очередь хранимых в реальном времени объектов с дополнительным индексом
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Monitel.Protocol.Common.ObjectsMap`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},Monitel.Protocol.Common.IResetableTimer,System.Double)" -->
        <member name="T:Monitel.Protocol.Common.ResetableTimerSupport.RegisterMode">
            <summary>
            Режим регистрации задания на формирование события
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ResetableTimerSupport.RegisterResult">
            <summary>
            Результат регистрации задания на формирование события
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IResetableTimer.Register(Monitel.Protocol.Common.ResetableTimerIdentifier,System.Double,System.UInt32,System.Object,Monitel.Protocol.Common.EventListener{Monitel.Protocol.Common.ResetableTimerEvent},Monitel.Protocol.Common.ResetableTimerSupport.RegisterMode)">
            <summary>
            Регистрация задания на формирование события в заданном режиме
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IResetableTimer.Register(Monitel.Protocol.Common.ResetableTimerIdentifier,System.Double,System.UInt32,Monitel.Protocol.Common.EventListener{Monitel.Protocol.Common.ResetableTimerEvent})">
            <summary>
            Безусловная регистрация задания на формирование события
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IResetableTimer.Unregister(Monitel.Protocol.Common.ResetableTimerIdentifier)">
            <summary>
            Удаление задания на формирование события
            Возвращает true, если срабатывание таймера было отменено
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IResetableTimer.IsRegistered(Monitel.Protocol.Common.ResetableTimerIdentifier)">
            <summary>
            Проверяет наличие задания на формирование события
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ResetableTimer">
            <summary>
            Многоканальный сбрасываемый таймер
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.ResetableTimer.Default">
            <summary>
            Сервис по-умолчанию
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.Create(System.String,System.Boolean)">
            <summary>
            Создаёт новый сервис
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.Create(System.String,Monitel.Protocol.Common.IEventsDispatcher{Monitel.Protocol.Common.ResetableTimerEvent})">
            <summary>
            Создаёт новый сервис
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.GetNextTimerId">
            <summary>
            Возвращает следующий свободный идентификатор таймера
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.Register(Monitel.Protocol.Common.ResetableTimerIdentifier,System.Double,System.UInt32,Monitel.Protocol.Common.EventListener{Monitel.Protocol.Common.ResetableTimerEvent},Monitel.Protocol.Common.ResetableTimerSupport.RegisterMode)">
            <summary>
            Регистрация задания на формирование события в заданном режиме
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.Register(Monitel.Protocol.Common.ResetableTimerIdentifier,System.Double,System.UInt32,System.Object,Monitel.Protocol.Common.EventListener{Monitel.Protocol.Common.ResetableTimerEvent},Monitel.Protocol.Common.ResetableTimerSupport.RegisterMode)">
            <summary>
            Регистрация задания на формирование события в заданном режиме
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.Register(Monitel.Protocol.Common.ResetableTimerIdentifier,System.Double,System.UInt32,Monitel.Protocol.Common.EventListener{Monitel.Protocol.Common.ResetableTimerEvent})">
            <summary>
            Безусловная регистрация задания на формирование события
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.Unregister(Monitel.Protocol.Common.ResetableTimerIdentifier)">
            <summary>
            Удаление задания на формирование события
            Возвращает true, если срабатывание таймера было отменено
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ResetableTimer.IsRegistered(Monitel.Protocol.Common.ResetableTimerIdentifier)">
            <summary>
            Проверяет наличие задания на формирование события
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ResetableTimer.TimerId">
            <summary>
            Идентификатор таймера
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ResetableTimer.TimerData">
            <summary>
            Элемент списка таймеров
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ResetableTimer.TimerInfoComparer">
            <summary>
            Компаратор TimerData
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IService.Start">
            <summary>
            Запуск
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IService.Stop">
            <summary>
            Останов
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.IService.Started">
            <summary>
            Запущен
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.IService.Activate">
            <summary>
            Активизировать
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.Service`1.Name">
            <summary>
            Идентификатор
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.Service`1.WaitTimeout">
            <summary>
            Таймаут ожидания активации
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.Service`1.ServiceAction(System.Boolean)">
            <summary>
            Должна возвратить false для предотвращения ожидания
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.ServicesPool`1.SizeLimit">
            <summary>
            Максимальное количество
            Должно настраиваться до начала работы
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.ServicesPool`1._sizeLimit">
            <summary>
            Максимальное количество
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.SharedState`1">
            <summary>
            Состояние, сохраняемое в файле
            </summary>
            <typeparam name="StateType"></typeparam>
        </member>
        <member name="E:Monitel.Protocol.Common.SharedState`1.OnUpdate">
            <summary>
            Событие для получения информации об изменении состояния
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.SharedState`1.UpdateCount">
            <summary>
            Количество получения обновлений извне
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.SharedState`1.ChangeCount">
            <summary>
            Количество внутренних изменений
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.SharedState`1.UpdateAndChangeCount">
            <summary>
            Общее количество изменений
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.SharedState`1.Update">
            <summary>
            Инициировать обновление
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.SharedState`1.ExecuteUpdate">
            <summary>
            Выполнить обновление
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.SharedState`1.Write(`0)">
            <summary>
            Выполняет сохранение состояния
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.ObjectStateChangeTrigger`2">
            <summary>
            Триггер изменения состояния
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ObjectStateChangeTrigger`2.#ctor(System.Object,`0,`1,System.Func{`1,`1,System.Boolean},System.Action{Monitel.Protocol.Common.ObjectStateChangeEvent{`0,`1}},System.Double,Monitel.Protocol.Common.IResetableTimer)">
            <summary>
            
            </summary>
            <param name="stateChanged">функция определения изменения состояния (первый параметр новое значение состояния, второй текущее)</param>
            <param name="dispatchEvent">реализует способ передачи события</param>
            <param name="dispatchDelay">задержка формирования события в мс</param>
        </member>
        <member name="T:Monitel.Protocol.Common.ObjectComputedStateChangeTrigger`2">
            <summary>
            Триггер изменения вычисляемого состояния по совокупности признаков
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.ObjectComputedStateChangeTrigger`2.#ctor(System.Object,`0,`1,System.Func{`1,`1,`1,`1},System.Func{`1,`1,`1,`1},System.Func{`1,`1,System.Boolean},System.Action{Monitel.Protocol.Common.ObjectStateChangeEvent{`0,`1}},System.Double,Monitel.Protocol.Common.IResetableTimer)">
            <summary>
            
            </summary>
            <param name="stateChanged">функция определения изменения состояния (первый параметр новое значение состояния, второй текущее)</param>
            <param name="dispatchEvent">реализует способ передачи события</param>
            <param name="dispatchDelay">задержка формирования события в мс</param>
        </member>
        <member name="M:Monitel.Protocol.Common.ObjectComputedStateChangeTrigger`2.SetState(`1)">
            <summary>
            Предлагает изменение состояния установкой признака
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.ObjectComputedStateChangeTrigger`2.ResetState">
            <summary>
            Предлагает изменение состояния сбросом признака
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.Net.TcpConnectionEventType.Connect">
            <summary>
            Соединение установлено
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.Net.TcpConnectionEventType.Disconnect">
            <summary>
            Соединение разорвано локально
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.Net.TcpConnectionEventType.RemoteDisconnect">
            <summary>
            Соединение разорвано удалённой стороной
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.Net.TcpConnectionEventType.Close">
            <summary>
            Сокет закрыт
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.Net.TcpConnectionEventType.Receive">
            <summary>
            Приняты данные
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.Net.TcpConnectionEventType.Send">
            <summary>
            Отправлены данные
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.Net.TcpConnection`1.SetKeepAlive(System.UInt32,System.UInt32,System.Boolean)">
            <summary>
            Настройка TCP KeepAlive
            </summary>
            <param name="time">Таймаут передачи TCP KeepAlive, мс</param>
            <param name="interval">Интервал передачи TCP KeepAlive, мс</param>
            <param name="on">Включение контроля соединения пакетами TCP KeepAlive</param>
            <returns></returns>
        </member>
        <member name="M:Monitel.Protocol.Common.Net.TcpConnection`1.SendBuffer(`0)">
            <summary>
            Передаёт буфер, начиная с позиции GetIndex
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.Net.TcpConnection`1.ReceiveBuffer(`0,System.Int32)">
            <summary>
            Приём в указанный буфер с возможностью ожидания получения заданного числа октетов начиная с позиции PutIndex
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.TimeSchedule.EventIdGeneratorType.Sequential">
            <summary>
            Последовательный
            Должен быть использован только если гарантируется, что планируемые события завершаются за цикл переполнения
            32-битного идентификатора при его последовательном инкременте во время вызовов методов планирования расписания
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.TimeSchedule.EventIdGeneratorType.Registry">
            <summary>
            На основе коллекции идентификаторов
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.TimeSchedule.EventIdGenerator">
            <summary>
            Тип генератора идентификаторов событий
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.TimeSchedule.UniqueOnly">
            <summary>
            Режи планирования только уникальных во времени событий
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.TimeSchedule.ScheduledEventComparer">
            <summary>
            Компаратор для построения множества событий, допускающего неуникальные во времени события с отличающимися идентифиикаторами
            </summary>
        </member>
        <member name="T:Monitel.Protocol.Common.TimeSchedule.ScheduledEventUniqueComparer">
            <summary>
            Компаратор для построения множества уникальных во времени событий
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.TimeService.WaitHiRes(System.Double)">
            <summary>
            Задержка. Занимает процессор, поэтому вряд ли где реально нужна.
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.TransientSubscriptionManager`3._indexByObject">
            <summary>
            Индекс по объекту
            </summary>
        </member>
        <member name="F:Monitel.Protocol.Common.TransientSubscriptionManager`3._indexByTimer">
            <summary>
            Индекс по идентификатору таймера
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.TransientSubscriptionManager`3.#ctor(System.Object,Monitel.Protocol.Common.IResetableTimer,Monitel.Protocol.Common.IEventsDispatcher{Monitel.Protocol.Common.TransientSubscriptionEvent{`0,`1,`2}},Monitel.Protocol.Common.ITraceLogger)">
            <summary>
            
            </summary>
            <param name="dispatcher">может быть null</param>
        </member>
        <member name="M:Monitel.Protocol.Common.TransientSubscriptionManager`3.Update(`0,`1,System.Double,System.Func{`0,`1,`2})">
            <summary>
            Обновляет подписку на указанное время в мс
            </summary>
            <param name="client"></param>
            <param name="handle"></param>
            <param name="duration"></param>
            <param name="createState">может быть null</param>
            <returns></returns>
        </member>
        <member name="M:Monitel.Protocol.Common.TransientSubscriptionManager`3.Contains(`1)">
            <summary>
            Возвращает состояние подписки
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.CommonUtil.GetAppName">
            <summary>
            Имя процесса приложения
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.CommonUtil.ToString(System.DateTime)">
            <summary>
            Унифицированное представления для использования в логах
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.CommonUtil.ToString(System.TimeSpan)">
            <summary>
            Унифицированное представления для использования в логах
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.CommonUtil.ToString(System.Boolean)">
            <summary>
            Унифицированное представления для использования в логах
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountIn">
            <summary>
            Количество поступивших на обработку
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountInPrevious">
            <summary>
            Количество поступивших на обработку до обновления
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountInDelta">
            <summary>
            Изменение в количестве поступивших на обработку
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountOut">
            <summary>
            Количество обработанных
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountOutPrevious">
            <summary>
            Количество обработанных до обновления
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountOutDelta">
            <summary>
            Изменение в количестве обработанных
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountBuffered">
            <summary>
            Количество ожидающих обработки
            </summary>
        </member>
        <member name="P:Monitel.Protocol.Common.InOutStatCounter.CountBufferedPrevious">
            <summary>
            Количество ожидающих обработки до обновления
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.InOutStatCounter.#ctor">
            <summary>
            Обнуление счётчиков
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.InOutStatCounter.NextCycle">
            <summary>
            Начало интервала накопления статистики
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.InOutStatCounter.IncIn(System.Int64)">
            <summary>
            Инкремент количества поступивших на обработку
            </summary>
        </member>
        <member name="M:Monitel.Protocol.Common.InOutStatCounter.IncOut(System.Int64)">
            <summary>
            Инкремент количества обработанных
            </summary>
        </member>
    </members>
</doc>
