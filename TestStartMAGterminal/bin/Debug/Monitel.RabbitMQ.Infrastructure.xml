<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Monitel.RabbitMQ.Infrastructure</name>
    </assembly>
    <members>
        <member name="T:Monitel.RabbitMQ.Infrastructure.InternalConnection">
            <summary>
            Для внутреннего использования, не использовать
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.InternalConnection.CreateConnection(System.String[],Monitel.PlatformInfrastructure.Logger.IPlatformLogger,System.String)">
            <summary>
            !!! Для внутреннего использования !!!
            !!! Не протестировано !!!
            !!! Может не работать !!!
            Создаёт соединения, без применения кеширования
            </summary>
            <param name="nodes">Ноды</param>
            <param name="logger">Логгер для ведения журнала работы</param>
            <param name="clientProvider">Имя приложения создающего соединение</param>
            <returns>Созданное соединение</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.InternalConnection.CreateConnection(System.String[],Monitel.PlatformInfrastructure.Logger.IPlatformLogger,System.String,System.Boolean)">
            <summary>
            !!! Для внутреннего использования !!!
            !!! Не протестировано !!!
            !!! Может не работать !!!
            Создаёт соединения, без применения кеширования
            </summary>
            <param name="nodes">Ноды</param>
            <param name="logger">Логгер для ведения журнала работы</param>
            <param name="clientProvider">Имя приложения создающего соединение</param>
            <param name="enableRecovery"> Будет ли доступен механизм автоматического пере подключения </param>
            <returns>Созданное соединение</returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.IInternalConnection">
            <summary>
            Внутрений интерфейс расширяющий возможности IConnection
            </summary>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.IInternalConnection.UserName">
            <summary>
            Возвращает идентификатор пользователя, имя которого было использованно для подключения
            </summary>
            <returns>идентификатор пользователя</returns>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.IInternalConnection.AppName">
            <summary>
            Имя приложения
            </summary>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.IInternalConnection.VirtualHost">
            <summary>
            Виртуальный хост
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.IInternalConnection.CreateBasicProperties">
            <summary>
            Возвращает заполненый заголовок для сообщений
            </summary>
            <returns>заполненый BasicProperties</returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection">
            <summary>
            Фасад для RMQ соединения 
            </summary>
        </member>
        <member name="E:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.RecoverySucceeded">
            <summary>
            Событие о успешном соедиеннеия
            </summary>
        </member>
        <member name="E:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.ConnectionRecoveryError">
            <summary>
            Событие об ошибка переподключения
            </summary>
        </member>
        <member name="E:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.Recovery">
            <summary>
            Событие о востановлении соедиеннеия
            </summary>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.Monitel#RabbitMQ#Infrastructure#IInternalConnection#VirtualHost">
            <summary>
            Виртуальный хост
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.#ctor(RabbitMQ.Client.IConnection,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection"/>.
            </summary>
            <param name="connection"> The connection. </param>
            <param name="userName">Имя пользователя</param>
            <param name="vhostName">Виртуальный хост</param>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.UserName">
            <summary>
            Возвращает идентификатор пользователя, имя которого было использованно для подключения
            </summary>
            <returns>идентификатор пользователя</returns>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.AppName">
            <summary>
            Имя приложения
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.InternalRmqConnection.CreateBasicProperties">
            <summary>
            Возвращает заполненый заголовок для сообщений
            </summary>
            <returns>Заполненый BasicProperties</returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.Notifications.EventName">
            <summary>
            Класс для описания события
            </summary>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.Notifications.EventName.Strings">
            <summary>
            Составные части
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.EventName.#ctor(System.String[])">
            <summary>
            Конструктор
            </summary>
            <param name="strings">Строки</param>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.EventName.#ctor(System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="name">Имя в формате /ServiceName/P1/P2/P3</param>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.EventName.ToString">
            <summary>
            Перегруженная версия вывода информации о событии
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.EventName.Contains(Monitel.RabbitMQ.Infrastructure.Notifications.EventName)">
            <summary>
            Включает ли данный путь указанный
            </summary>
            <param name="name">Путь</param>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.Notifications.IPublisher">
            <summary>
            Интерфейс для модуля публикации событий
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.IPublisher.Publish(Monitel.RabbitMQ.Infrastructure.Notifications.EventName,System.Byte[])">
            <summary>
            Публикация сообщения события
            </summary>
            <param name="eventName">Имя события</param>
            <param name="body">тело</param>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.Notifications.ISubscriber">
            <summary>
            Интерфейс для модуля подписки на события
            </summary>
        </member>
        <member name="E:Monitel.RabbitMQ.Infrastructure.Notifications.ISubscriber.OnServiceDown">
            <summary>
            Событие о разрыве соединения со службой нотификации
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.ISubscriber.Subscribe(Monitel.RabbitMQ.Infrastructure.Notifications.EventName,Monitel.RabbitMQ.Infrastructure.Notifications.NotifyCallback)">
            <summary>
            Подписываеться на указанное событие
            </summary>
            <param name="eventName"></param>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.Notifications.NotifyCallback">
            <summary>
            Описание метода обратного вызова службы нотификации
            </summary>
            <param name="eventName"></param>
            <param name="obj"></param>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient">
            <summary>
            Клент службы нотификации
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreatePublisher">
            <summary>
            Создаёт объект публикации событий
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreatePublisher(RabbitMQ.Client.IConnection)">
            <summary>
            Создаёт объект публикации событий
            </summary>
            <param name="connection">установленное подключение к RabbitMQ</param>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreatePublisher(Monitel.Supervisor.Infrastructure.Rpc.ISupervisorConnection,Monitel.PlatformInfrastructure.Logger.IPlatformLogger)">
            <summary>
            Создаёт объект публикации событий
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreatePublisher(Monitel.PlatformInfrastructure.Logger.IPlatformLogger)">
            <summary>
            Создаёт объект публикации событий
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreateSubscriber">
            <summary>
            Создаёт объект для получения событий
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreateSubscriber(RabbitMQ.Client.IConnection)">
            <summary>
            Создаёт объект для получения событий
            </summary>
            <param name="connection">установленное подключение к RabbitMQ</param>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreateSubscriber(Monitel.Supervisor.Infrastructure.Rpc.ISupervisorConnection,Monitel.PlatformInfrastructure.Logger.IPlatformLogger)">
            <summary>
            Создаёт объект для получения событий
            </summary>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Notifications.NotificationClient.CreateSubscriber(Monitel.PlatformInfrastructure.Logger.IPlatformLogger)">
            <summary>
            Создаёт объект для получения событий
            </summary>
            <returns></returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection">
            <summary>
             обертка над классом создания подключений RMQConnector. 
             Статический.
             Не умеет создавать подключения для нескольких rmq.
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.GetRabbitMQUserId">
            <summary>
            возвращает идентификатор пользователя, который прописан в сертификате.
            </summary>
            <returns>идентификатор пользователя</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.WriteBasicProperties(RabbitMQ.Client.IBasicProperties)">
            <summary>
            Заполняет служебные поля объекта IBasicProperties
            </summary>
            <param name="props">Заполняемый объект</param>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.GetBasicProperties">
            <summary>
            Возвращает заполненный заголовок для сообщений
            </summary>
            <returns>заполненный BasicProperties</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.CreateConnection(System.String)">
            <summary>
            Создает подключение к RabbitMQ. сама 
            установит подключение с супервизором и 
            вычитает из него строчки подключения к rabbitmq 
            и подключения к службе сертификации.
            </summary>
            <param name="clientProvider">Имя приложения</param>
            <returns>Подключение к RabbitMQ</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.CreateConnection(Monitel.PlatformInfrastructure.Logger.IPlatformLogger,System.String)">
            <summary>
            Создает подключение к RabbitMQ. сама 
            установит подключение с супервизором и 
            вычитает из него строчки подключения к rabbitmq 
            и подключения к службе сертификации.
            </summary>
            <param name="logger">Объект для журналирования работы</param>
            <param name="clientProvider">Имя приложения</param>
            <returns>Подключение к RabbitMQ</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.CreateConnection(System.Boolean,System.String)">
            <summary>
            Создает подключение к RabbitMQ. сама 
            установит подключение с супервизором и 
            вычитает из него строчки подключения к rabbitmq 
            и подключения к службе сертификации.
            </summary>
            <param name="enableRecovery"> Будет ли доступен механизм автоматического пере подключения </param>
            <param name="clientProvider">Имя приложения</param>
            <returns>Подключение к RabbitMQ</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.CreateConnection(Monitel.PlatformInfrastructure.Logger.IPlatformLogger,System.Boolean,System.String)">
            <summary>
            Создает подключение к RabbitMQ. сама 
            установит подключение с супервизором и 
            вычитает из него строчки подключения к rabbitmq 
            и подключения к службе сертификации.
            </summary>
            <param name="logger">Объект для журналирования работы</param>
            <param name="enableRecovery"> Будет ли доступен механизм автоматического пере подключения </param>
            <param name="clientProvider">Имя приложения</param>
            <returns>Подключение к RabbitMQ</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RabbitMQConnection.CreateConnection(System.Object,Monitel.PlatformInfrastructure.Logger.IPlatformLogger,System.String)">
            <summary>
            Создает подключение к RabbitMQ
            </summary>
            <param name="sp">Нужно для получения списка хостов с RabbitqMQ</param>
            <param name="logger">Объект для журналирования работы</param>
            <param name="clientProvider">Имя приложения</param>
            <returns>Подключение к RabbitMQ</returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.IRmqConnectionStringProvider">
            <summary>
            Интерфейс провайдера получения строк подключения к RMQ
            </summary>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.IRmqConnectionStringProvider.Nodes">
            <summary>
            Точки подключения к RMQ
            </summary>
        </member>
        <member name="P:Monitel.RabbitMQ.Infrastructure.IRmqConnectionStringProvider.VirtualHost">
            <summary>
            Имя виртуального хоста
            </summary>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.RmqConnectionStringProvider">
            <summary>
            Провайдер для получения строк подключения
            </summary>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RmqConnectionStringProvider.GetHosts(Monitel.PlatformInfrastructure.CK11Domains.DomainsCache)">
            <summary>
            Возвращает список хостов
            </summary>
            <returns>список нод</returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.RmqConnectionStringProvider.ConvertToEndpoints(System.String[],System.String@)">
            <summary>
            Конвертирует строки в объекты описывающие точки подключения к RMQ
            </summary>
            <param name="endPoints">Строки подключения к нодам</param>
            <param name="vhostName">Параметр использется для настройки имени виртуального хоста, так как на разных доменах он может отличатся</param>
            <returns>Объект для подключения к нодам</returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.ICredentialProvider">
            <summary>
            Интерфейс провайдера получения учётных данных
            </summary>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.CredentialProvider">
            <summary>
            Провайдер получения учётных данных
            </summary>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.RmqException">
            <summary>
            Класс для генерации исключений возникающих при работе библиотеки Monitel.RabbitMQ.Infrastructure
            </summary>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.Serializer`1">
            <summary>
            Сериализатор
            </summary>
            <typeparam name="T">Тип контракта данных</typeparam>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Serializer`1.Serialize(`0)">
            <summary>
            Сереализовать объект в массив байт
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Monitel.RabbitMQ.Infrastructure.Serializer`1.Deserialize(System.Byte[])">
            <summary>
            Десереализовать объект
            </summary>
            <param name="dump"></param>
            <returns></returns>
        </member>
        <member name="T:Monitel.RabbitMQ.Infrastructure.UserInfo">
            <summary>
            Стрктура для харнения информации для подключения
            </summary>
        </member>
    </members>
</doc>
